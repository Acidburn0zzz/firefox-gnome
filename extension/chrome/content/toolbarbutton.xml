<?xml version="1.0"?>

<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!DOCTYPE window SYSTEM "chrome://gnome-theme-tweak/locale/settings.dtd">

<bindings xmlns="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">

  <binding id="preferences"
           extends="chrome://global/content/bindings/toolbarbutton.xml#menu">

    <content type="menu"
             label="&gnomethemetweak.label;">
      <children includes="observes|template|panel|tooltip"/>
      <xul:menupopup anonid="preferences-menu"
                     class="customization-preferences-menuitem"
                     onpopupshowing="this.parentNode.updateMenu();">
        <xul:menuitem pref="extensions.gnome-theme-tweak.newtab-page"
                      class="preferences-menuitem"
                      type="checkbox"
                      label="&newtabpage.label;"
                      oncommand="this.parentNode.parentNode.changePref(this);"/>
        <xul:menuitem pref="extensions.gnome-theme-tweak.relief-buttons"
                      class="preferences-menuitem"
                      type="checkbox"
                      label="&reliefbuttons.label;"
                      oncommand="this.parentNode.parentNode.changePref(this);"/>
        <xul:menuitem pref="extensions.gnome-theme-tweak.inactive-state"
                      class="preferences-menuitem"
                      type="checkbox"
                      label="&inactivestate.label;"
                      oncommand="this.parentNode.parentNode.changePref(this);"/>
        <xul:menuitem pref="extensions.gnome-theme-tweak.tabs-on-top"
                      class="preferences-menuitem"
                      type="checkbox"
                      label="&tabontop.label;"
                      oncommand="this.parentNode.parentNode.changePref(this);"/>
        <xul:menuitem pref="extensions.gnome-theme-tweak.tabs-border"
                      class="preferences-menuitem"
                      type="checkbox"
                      label="&tabsborder.label;"
                      oncommand="this.parentNode.parentNode.changePref(this);"/>
        <xul:menuitem pref="extensions.gnome-theme-tweak.urlbar-history-dropmarker"
                      class="preferences-menuitem"
                      type="checkbox"
                      label="&urlbarhistorydropmarker.label;"
                      oncommand="this.parentNode.parentNode.changePref(this);"/>
        <xul:menuitem pref="extensions.gnome-theme-tweak.forward-button"
                      class="preferences-menuitem"
                      type="checkbox"
                      label="&forwardbutton.label;"
                      oncommand="this.parentNode.parentNode.changePref(this);"/>
      </xul:menupopup>
      <xul:image class="toolbarbutton-icon" xbl:inherits="validate,src=image,label,type"/>
      <xul:label class="toolbarbutton-text" crop="right" flex="1"
                 xbl:inherits="value=label,accesskey,crop,dragover-top,wrap"/>
      <xul:label class="toolbarbutton-multiline-text" flex="1"
                 xbl:inherits="xbl:text=label,accesskey,wrap"/>
      <xul:dropmarker anonid="dropmarker" type="menu"
                      class="toolbarbutton-menu-dropmarker" xbl:inherits="disabled,label"/>
      <children/>
    </content>

    <implementation>
      <method name="updateMenu">
        <body>
        <![CDATA[
          var menupopup = document.getAnonymousElementByAttribute(this, "anonid", "preferences-menu");
          if (menupopup && menupopup.hasChildNodes()) {
            var children = menupopup.childNodes;
            for (var i = 0; i < children.length; i++) {
              var key = children[i].getAttribute("pref");
              if (key) {
                children[i].setAttribute("checked", Services.prefs.getBoolPref(key));
              }
            }
          }
         ]]>
        </body>
      </method>

      <method name="changePref">
        <parameter name="aNode"/>
        <body><![CDATA[
          var key = aNode.getAttribute("pref");
          var current_value = Services.prefs.getBoolPref(key);
          Services.prefs.setBoolPref(key, !current_value);
        ]]></body>
      </method>
    </implementation>

  </binding>

</bindings>
